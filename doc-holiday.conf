
// This is the configuation file for Doc Holiday
// It is in JSON5 format, supporting comments
// such as per HJSON or JSON5
// As such, note also that key identifiers need not be quoted
// and single quotes work for strings as well as double quotes
// See the HJSON spec for more info (https://hjson.github.io/faq.html)
// or JSON5 (https://github.com/json5/json5)
{

  /*
    Output format(s)
      May be "html" or "markdown" or "html,markdown" for both
  */
  format: "markdown",


  /*
   Which primary documentation engine to use.
   One of:
    - "jsdoc" (JSDOC) Traditional Javascript documentation to HTML
    - "docjs" (Documentation JS) Simplified JSDOC alternative to HTML or Markdown
    - "other" (???) The enginePath option specifies an executable by absolute path to run.
  */
  engine: "jsdoc",

  /*
   The chosen engine executable is expected to exist in the system path at runtime.
   If it is not, supply the path to the executable to run here directly.
   If this is a path to a directory, this directory is expected to contain the executable for the chosen engine.
   If the chosen engine is "other", this path should be to the executable command or script to run.
   The executable will be run with a series arguments in key=value form.
   A custom command or script must be able to understand these arguments.
  */
  enginePath: "",

  /*
    Which template to use (per the engine chosen)
      If the template is locally installed in the project, specify as "node_modules/<template_name>"
      For templates outside of the project tree, use an absolute path.
      Defaults to "templates/default"
  */
  template: "node_modules/better-docs",

  /*
   Folder to generate intermediate stub files into.
   Relative to project root, or an absolute path
  */
  intermediate: ".dh-temp",

  /*
   Folder to output HTML files (if not using Markdown)
   Relative to project root, or an absolute path
  */
  html: "docs/html",

  /*
   Output location for Markdown output
   Specify the file path (e.g. docs/API.md) to receive this output
  */
  markdown: "docs/API.md",

  /*
    JSDOC configuration file location, if applicable
  */
  jsdocConfig: "jsdoc-conf.json",

  /*
   Executable info
   Not normally recommended to modify by user, unless you are sure of what you are doing.
  */
  execInfo: {
    jsdoc: {
      html: {
        exec: "jsdoc -p -d %html% -r -c %intermediate%/jsdoc.conf %intermediate%"
      },
      markdown: {
//        exec: "jsdoc2md --configure %intermediate%/jsdoc.conf --files %intermediate%/**/*.js > %markdown%"
        exec: "jsdoc2md --global-index-format none --module-index-format table --partial tooling/j2mdhbs/header.hbs --partial tooling/jdmdhbs/link.hbs --partial tooling/jdmdhbs/body.hbs --configure %intermediate%/jsdoc.conf --files %intermediate%/**/*.js > %markdown%"
      },
    },
    docjs: {
      html: {
        exec: "documentation build -f html -o %html% %intermediate%"
      },
      markdown: {
        exec: "documentation build -f md -o %markdown% %intermediate%"
      }
    },
    other: {
      html: {
        exec: "%enginePath% template=%template% format=html output=%html% config=%intermediate%/jsdoc.conf input=%intermediate%"
      },
      markdown: {
        exec: "%enginePath% template=%template% format=markdown output=%markdown% config=%intermediate%/jsdoc.conf input=%intermediate%"
      }
    }

  }

}